//method 1 using binary search
class Solution {
  public:
    int search(vector<int>& arr, int key) {
        int low = 0, high = arr.size() - 1;
        
        while (low <= high) {
            int mid = (low + high) / 2;
            if (arr[mid] == key) {
                return mid;
            }

            if (arr[low] <= arr[mid]) { 
                if (key >= arr[low] && key < arr[mid]) {
                    high = mid - 1; 
                } else {
                    low = mid + 1; 
                }
            } else { 
                if (key > arr[mid] && key <= arr[high]) {
                    low = mid + 1; 
                } else {
                    high = mid - 1; 
                }
            }
        }

        return -1;
    }
};

//method 2 using linear seatch 
class Solution {
  public:
    int search(vector<int>& arr, int key) {
        // complete the function here4
        for(int i=0;i<arr.size();i++){
            if(arr[i]==key){
                return i;
            }
        }
        return -1;
    }
};
